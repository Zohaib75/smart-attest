/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.example.mynetwork


// ENUMS
enum DegreeStatus {
  o AWAITING_APPROVAL
  o APPROVED_BY_REGISTRAR
  o APPROVED_BY_DEAN
  o APPROVED
}

participant Hec identified by HecId {
  o String HecId
  o String email
  o String designation
  o String mobile 
  o String city
}

participant Student identified by StudentId {
  
  o String StudentId

  o String cnic 
  
  o String name
  o String Father_name
  o String Address
  o String email
  o String mobile
  o String city

  o Double matric
  o Double inter

  --> University university
  --> Department department

}

participant University identified by UniversityId {
  o String UniversityId
  o String name
  o String email
  o String category
  o String sector
  o String landline 
  o String city


}

asset Department identified by DepartmentId {
  o String DepartmentId
  o String name 
  --> University university
}

abstract participant Employee identified by EmployeeId {
  o String EmployeeId
  o String name
  o String email

  --> University university
}

participant Issuer extends Employee{

  --> Department department
  
}

participant Dean extends Employee {

  --> Department department
}

participant Registrar extends Employee {
  
}



asset Degree identified by DegreeId {
  o String DegreeId
  o String Description
  o DegreeStatus status
  o DateTime issued_Date optional

  --> Issuer issuer
  --> Student student
  --> Employee [] approval

}
/////////////Transactions

transaction IssueDegree {

  o String Description
  o DateTime issued_Date 

  --> Student student
}

event IssueDegree_Event {
  --> Degree   degree
 
}


transaction Approve {
  --> Degree degree

}

event Approve_Event {
  --> Degree   degree

}

transaction HecApprove {
  --> Degree degree

}

event HecApprove_Event {
  --> Degree   degree

}

concept IBCC_Concept {
 
  o Double matric
  o Double inter
}

@returns(IBCC_Concept)
transaction Request_IBCC {
  o String cnic
}

concept NADRA_Concept {
   
  o String name
  o String Father_name
  o String Address
  o String email
  o String mobile
  o String city

}

@returns(NADRA_Concept)
transaction Request_Nadra {
  o String cnic
}

////// Add Transactions


transaction Add_Student {

  o String cnic 
  
  o String name
  o String Father_name
  o String Address
  o String email
  o String mobile
  o String city

  o Double matric
  o Double inter


  --> Department department


}


event Add_Student_Event {

 --> Student student

}


transaction Add_Department {

  o String name 
  --> University university
}

event Add_Department_Event {

 --> Department department

}


transaction Add_Dean {

  o String name
  o String email

  --> University university
  --> Department department

}

event Add_Dean_Event {

 --> Dean dean
}

transaction Add_Issuer {

  o String id
  o String name
  o String email

  --> University university
  --> Department department

}

event Add_Issuer_Event {

 --> Issuer issuer

}


// transaction Check_Status {
//   o String id
// }

// event Check_Status_Event {
//   o DegreeStatus status
// }

// transaction Request_Updation {

//   --> University  uni
//   o   Department  department 
  
// }

// event Request_Updation_Event {

//   --> University  uni
//   o   Department  department   
// }
